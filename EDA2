{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPMvueYwMGnV1uzpF18OhVZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Raheemshaik2003/machine-learning-/blob/main/EDA2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "7WIzTxP8Llvc"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as s"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv('/pseudo_facebook.csv')"
      ],
      "metadata": {
        "id": "dSn-Rn72Mprb"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "p_reBYmxNz_M",
        "outputId": "c1c6fd0a-b08d-4ff8-d537-346856178d55"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "        userid  age  dob_day  dob_year  dob_month  gender  tenure  \\\n",
            "0      2094382   14       19      1999         11    male   266.0   \n",
            "1      1192601   14        2      1999         11  female     6.0   \n",
            "2      2083884   14       16      1999         11    male    13.0   \n",
            "3      1203168   14       25      1999         12  female    93.0   \n",
            "4      1733186   14        4      1999         12    male    82.0   \n",
            "...        ...  ...      ...       ...        ...     ...     ...   \n",
            "98998  1268299   68        4      1945          4  female   541.0   \n",
            "98999  1256153   18       12      1995          3  female    21.0   \n",
            "99000  1195943   15       10      1998          5  female   111.0   \n",
            "99001  1468023   23       11      1990          4  female   416.0   \n",
            "99002  1397896   39       15      1974          5  female   397.0   \n",
            "\n",
            "       friend_count  friendships_initiated  likes  likes_received  \\\n",
            "0                 0                      0      0               0   \n",
            "1                 0                      0      0               0   \n",
            "2                 0                      0      0               0   \n",
            "3                 0                      0      0               0   \n",
            "4                 0                      0      0               0   \n",
            "...             ...                    ...    ...             ...   \n",
            "98998          2118                    341   3996           18089   \n",
            "98999          1968                   1720   4401           13412   \n",
            "99000          2002                   1524  11959           12554   \n",
            "99001          2560                    185   4506            6516   \n",
            "99002          2049                    768   9410           12443   \n",
            "\n",
            "       mobile_likes  mobile_likes_received  www_likes  www_likes_received  \n",
            "0                 0                      0          0                   0  \n",
            "1                 0                      0          0                   0  \n",
            "2                 0                      0          0                   0  \n",
            "3                 0                      0          0                   0  \n",
            "4                 0                      0          0                   0  \n",
            "...             ...                    ...        ...                 ...  \n",
            "98998          3505                  11887        491                6202  \n",
            "98999          4399                  10592          2                2820  \n",
            "99000         11959                  11462          0                1092  \n",
            "99001          4506                   5760          0                 756  \n",
            "99002          9410                   9530          0                2913  \n",
            "\n",
            "[99003 rows x 15 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "rq4akORNN3DW",
        "outputId": "3a9a8b67-f8a3-4d77-acda-b14058d0e246"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    userid  age  dob_day  dob_year  dob_month  gender  tenure  friend_count  \\\n",
              "0  2094382   14       19      1999         11    male   266.0             0   \n",
              "1  1192601   14        2      1999         11  female     6.0             0   \n",
              "2  2083884   14       16      1999         11    male    13.0             0   \n",
              "3  1203168   14       25      1999         12  female    93.0             0   \n",
              "4  1733186   14        4      1999         12    male    82.0             0   \n",
              "\n",
              "   friendships_initiated  likes  likes_received  mobile_likes  \\\n",
              "0                      0      0               0             0   \n",
              "1                      0      0               0             0   \n",
              "2                      0      0               0             0   \n",
              "3                      0      0               0             0   \n",
              "4                      0      0               0             0   \n",
              "\n",
              "   mobile_likes_received  www_likes  www_likes_received  \n",
              "0                      0          0                   0  \n",
              "1                      0          0                   0  \n",
              "2                      0          0                   0  \n",
              "3                      0          0                   0  \n",
              "4                      0          0                   0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-179f4271-3f1f-4b9e-816a-6d8ffee84b78\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2094382</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>266.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1192601</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2083884</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1203168</td>\n",
              "      <td>14</td>\n",
              "      <td>25</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>female</td>\n",
              "      <td>93.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1733186</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>male</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-179f4271-3f1f-4b9e-816a-6d8ffee84b78')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-179f4271-3f1f-4b9e-816a-6d8ffee84b78 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-179f4271-3f1f-4b9e-816a-6d8ffee84b78');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head(100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "ch1O43icOM7y",
        "outputId": "277a72f2-7452-4ce1-fd18-4067d9241ab9"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     userid  age  dob_day  dob_year  dob_month  gender  tenure  friend_count  \\\n",
              "0   2094382   14       19      1999         11    male   266.0             0   \n",
              "1   1192601   14        2      1999         11  female     6.0             0   \n",
              "2   2083884   14       16      1999         11    male    13.0             0   \n",
              "3   1203168   14       25      1999         12  female    93.0             0   \n",
              "4   1733186   14        4      1999         12    male    82.0             0   \n",
              "..      ...  ...      ...       ...        ...     ...     ...           ...   \n",
              "95  1126847   15        5      1998          5    male    89.0             0   \n",
              "96  1056469   15       19      1998          5  female    56.0             0   \n",
              "97  2190921   15       17      1998          5    male    21.0             0   \n",
              "98  1496299   15       30      1998          6    male    63.0             0   \n",
              "99  1297545   15       14      1998          6  female    27.0             0   \n",
              "\n",
              "    friendships_initiated  likes  likes_received  mobile_likes  \\\n",
              "0                       0      0               0             0   \n",
              "1                       0      0               0             0   \n",
              "2                       0      0               0             0   \n",
              "3                       0      0               0             0   \n",
              "4                       0      0               0             0   \n",
              "..                    ...    ...             ...           ...   \n",
              "95                      0      0               0             0   \n",
              "96                      0      0               0             0   \n",
              "97                      0      0               0             0   \n",
              "98                      0      0               0             0   \n",
              "99                      0      0               0             0   \n",
              "\n",
              "    mobile_likes_received  www_likes  www_likes_received  \n",
              "0                       0          0                   0  \n",
              "1                       0          0                   0  \n",
              "2                       0          0                   0  \n",
              "3                       0          0                   0  \n",
              "4                       0          0                   0  \n",
              "..                    ...        ...                 ...  \n",
              "95                      0          0                   0  \n",
              "96                      0          0                   0  \n",
              "97                      0          0                   0  \n",
              "98                      0          0                   0  \n",
              "99                      0          0                   0  \n",
              "\n",
              "[100 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fa643e23-24d1-4362-86cb-327ad60deb62\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2094382</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>266.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1192601</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2083884</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1203168</td>\n",
              "      <td>14</td>\n",
              "      <td>25</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>female</td>\n",
              "      <td>93.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1733186</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>male</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>1126847</td>\n",
              "      <td>15</td>\n",
              "      <td>5</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>male</td>\n",
              "      <td>89.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>1056469</td>\n",
              "      <td>15</td>\n",
              "      <td>19</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>56.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>2190921</td>\n",
              "      <td>15</td>\n",
              "      <td>17</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>male</td>\n",
              "      <td>21.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>1496299</td>\n",
              "      <td>15</td>\n",
              "      <td>30</td>\n",
              "      <td>1998</td>\n",
              "      <td>6</td>\n",
              "      <td>male</td>\n",
              "      <td>63.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>1297545</td>\n",
              "      <td>15</td>\n",
              "      <td>14</td>\n",
              "      <td>1998</td>\n",
              "      <td>6</td>\n",
              "      <td>female</td>\n",
              "      <td>27.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fa643e23-24d1-4362-86cb-327ad60deb62')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-fa643e23-24d1-4362-86cb-327ad60deb62 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-fa643e23-24d1-4362-86cb-327ad60deb62');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "WNNzrLTQORvr",
        "outputId": "a13341b8-f274-4e3d-ec08-e52c995ecc35"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        userid  age  dob_day  dob_year  dob_month  gender  tenure  \\\n",
              "98998  1268299   68        4      1945          4  female   541.0   \n",
              "98999  1256153   18       12      1995          3  female    21.0   \n",
              "99000  1195943   15       10      1998          5  female   111.0   \n",
              "99001  1468023   23       11      1990          4  female   416.0   \n",
              "99002  1397896   39       15      1974          5  female   397.0   \n",
              "\n",
              "       friend_count  friendships_initiated  likes  likes_received  \\\n",
              "98998          2118                    341   3996           18089   \n",
              "98999          1968                   1720   4401           13412   \n",
              "99000          2002                   1524  11959           12554   \n",
              "99001          2560                    185   4506            6516   \n",
              "99002          2049                    768   9410           12443   \n",
              "\n",
              "       mobile_likes  mobile_likes_received  www_likes  www_likes_received  \n",
              "98998          3505                  11887        491                6202  \n",
              "98999          4399                  10592          2                2820  \n",
              "99000         11959                  11462          0                1092  \n",
              "99001          4506                   5760          0                 756  \n",
              "99002          9410                   9530          0                2913  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-80da6d0e-6c02-4968-b708-822dd447fef3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>98998</th>\n",
              "      <td>1268299</td>\n",
              "      <td>68</td>\n",
              "      <td>4</td>\n",
              "      <td>1945</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>541.0</td>\n",
              "      <td>2118</td>\n",
              "      <td>341</td>\n",
              "      <td>3996</td>\n",
              "      <td>18089</td>\n",
              "      <td>3505</td>\n",
              "      <td>11887</td>\n",
              "      <td>491</td>\n",
              "      <td>6202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98999</th>\n",
              "      <td>1256153</td>\n",
              "      <td>18</td>\n",
              "      <td>12</td>\n",
              "      <td>1995</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>21.0</td>\n",
              "      <td>1968</td>\n",
              "      <td>1720</td>\n",
              "      <td>4401</td>\n",
              "      <td>13412</td>\n",
              "      <td>4399</td>\n",
              "      <td>10592</td>\n",
              "      <td>2</td>\n",
              "      <td>2820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99000</th>\n",
              "      <td>1195943</td>\n",
              "      <td>15</td>\n",
              "      <td>10</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>111.0</td>\n",
              "      <td>2002</td>\n",
              "      <td>1524</td>\n",
              "      <td>11959</td>\n",
              "      <td>12554</td>\n",
              "      <td>11959</td>\n",
              "      <td>11462</td>\n",
              "      <td>0</td>\n",
              "      <td>1092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99001</th>\n",
              "      <td>1468023</td>\n",
              "      <td>23</td>\n",
              "      <td>11</td>\n",
              "      <td>1990</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>416.0</td>\n",
              "      <td>2560</td>\n",
              "      <td>185</td>\n",
              "      <td>4506</td>\n",
              "      <td>6516</td>\n",
              "      <td>4506</td>\n",
              "      <td>5760</td>\n",
              "      <td>0</td>\n",
              "      <td>756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99002</th>\n",
              "      <td>1397896</td>\n",
              "      <td>39</td>\n",
              "      <td>15</td>\n",
              "      <td>1974</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>397.0</td>\n",
              "      <td>2049</td>\n",
              "      <td>768</td>\n",
              "      <td>9410</td>\n",
              "      <td>12443</td>\n",
              "      <td>9410</td>\n",
              "      <td>9530</td>\n",
              "      <td>0</td>\n",
              "      <td>2913</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80da6d0e-6c02-4968-b708-822dd447fef3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-80da6d0e-6c02-4968-b708-822dd447fef3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-80da6d0e-6c02-4968-b708-822dd447fef3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.tail(100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "qOWmHfS4OVlM",
        "outputId": "903ce39d-4fc4-455c-8f9a-e60ee2813c6e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        userid  age  dob_day  dob_year  dob_month  gender  tenure  \\\n",
              "98903  2085281   96       28      1917          6    male   999.0   \n",
              "98904  1585181   15       20      1998          5    male   336.0   \n",
              "98905  1038391   19       19      1994          8    male   415.0   \n",
              "98906  1617578   20       11      1993          7  female   526.0   \n",
              "98907  1532834   22       23      1991         11  female   152.0   \n",
              "...        ...  ...      ...       ...        ...     ...     ...   \n",
              "98998  1268299   68        4      1945          4  female   541.0   \n",
              "98999  1256153   18       12      1995          3  female    21.0   \n",
              "99000  1195943   15       10      1998          5  female   111.0   \n",
              "99001  1468023   23       11      1990          4  female   416.0   \n",
              "99002  1397896   39       15      1974          5  female   397.0   \n",
              "\n",
              "       friend_count  friendships_initiated  likes  likes_received  \\\n",
              "98903          3738                   1705   2952            3857   \n",
              "98904          1993                    267   2964            5546   \n",
              "98905          2054                   1060   2403            8753   \n",
              "98906          4665                    687   3360            7446   \n",
              "98907          4696                    231   2724            6012   \n",
              "...             ...                    ...    ...             ...   \n",
              "98998          2118                    341   3996           18089   \n",
              "98999          1968                   1720   4401           13412   \n",
              "99000          2002                   1524  11959           12554   \n",
              "99001          2560                    185   4506            6516   \n",
              "99002          2049                    768   9410           12443   \n",
              "\n",
              "       mobile_likes  mobile_likes_received  www_likes  www_likes_received  \n",
              "98903          2223                   2709        729                1148  \n",
              "98904          2865                   4202         99                1344  \n",
              "98905          1957                   5739        446                3014  \n",
              "98906          2911                   7013        449                 433  \n",
              "98907          2150                   3207        574                2805  \n",
              "...             ...                    ...        ...                 ...  \n",
              "98998          3505                  11887        491                6202  \n",
              "98999          4399                  10592          2                2820  \n",
              "99000         11959                  11462          0                1092  \n",
              "99001          4506                   5760          0                 756  \n",
              "99002          9410                   9530          0                2913  \n",
              "\n",
              "[100 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-998dd503-21a2-453c-99c6-9bd0c1040547\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>98903</th>\n",
              "      <td>2085281</td>\n",
              "      <td>96</td>\n",
              "      <td>28</td>\n",
              "      <td>1917</td>\n",
              "      <td>6</td>\n",
              "      <td>male</td>\n",
              "      <td>999.0</td>\n",
              "      <td>3738</td>\n",
              "      <td>1705</td>\n",
              "      <td>2952</td>\n",
              "      <td>3857</td>\n",
              "      <td>2223</td>\n",
              "      <td>2709</td>\n",
              "      <td>729</td>\n",
              "      <td>1148</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98904</th>\n",
              "      <td>1585181</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>male</td>\n",
              "      <td>336.0</td>\n",
              "      <td>1993</td>\n",
              "      <td>267</td>\n",
              "      <td>2964</td>\n",
              "      <td>5546</td>\n",
              "      <td>2865</td>\n",
              "      <td>4202</td>\n",
              "      <td>99</td>\n",
              "      <td>1344</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98905</th>\n",
              "      <td>1038391</td>\n",
              "      <td>19</td>\n",
              "      <td>19</td>\n",
              "      <td>1994</td>\n",
              "      <td>8</td>\n",
              "      <td>male</td>\n",
              "      <td>415.0</td>\n",
              "      <td>2054</td>\n",
              "      <td>1060</td>\n",
              "      <td>2403</td>\n",
              "      <td>8753</td>\n",
              "      <td>1957</td>\n",
              "      <td>5739</td>\n",
              "      <td>446</td>\n",
              "      <td>3014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98906</th>\n",
              "      <td>1617578</td>\n",
              "      <td>20</td>\n",
              "      <td>11</td>\n",
              "      <td>1993</td>\n",
              "      <td>7</td>\n",
              "      <td>female</td>\n",
              "      <td>526.0</td>\n",
              "      <td>4665</td>\n",
              "      <td>687</td>\n",
              "      <td>3360</td>\n",
              "      <td>7446</td>\n",
              "      <td>2911</td>\n",
              "      <td>7013</td>\n",
              "      <td>449</td>\n",
              "      <td>433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98907</th>\n",
              "      <td>1532834</td>\n",
              "      <td>22</td>\n",
              "      <td>23</td>\n",
              "      <td>1991</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>152.0</td>\n",
              "      <td>4696</td>\n",
              "      <td>231</td>\n",
              "      <td>2724</td>\n",
              "      <td>6012</td>\n",
              "      <td>2150</td>\n",
              "      <td>3207</td>\n",
              "      <td>574</td>\n",
              "      <td>2805</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98998</th>\n",
              "      <td>1268299</td>\n",
              "      <td>68</td>\n",
              "      <td>4</td>\n",
              "      <td>1945</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>541.0</td>\n",
              "      <td>2118</td>\n",
              "      <td>341</td>\n",
              "      <td>3996</td>\n",
              "      <td>18089</td>\n",
              "      <td>3505</td>\n",
              "      <td>11887</td>\n",
              "      <td>491</td>\n",
              "      <td>6202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98999</th>\n",
              "      <td>1256153</td>\n",
              "      <td>18</td>\n",
              "      <td>12</td>\n",
              "      <td>1995</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>21.0</td>\n",
              "      <td>1968</td>\n",
              "      <td>1720</td>\n",
              "      <td>4401</td>\n",
              "      <td>13412</td>\n",
              "      <td>4399</td>\n",
              "      <td>10592</td>\n",
              "      <td>2</td>\n",
              "      <td>2820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99000</th>\n",
              "      <td>1195943</td>\n",
              "      <td>15</td>\n",
              "      <td>10</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>111.0</td>\n",
              "      <td>2002</td>\n",
              "      <td>1524</td>\n",
              "      <td>11959</td>\n",
              "      <td>12554</td>\n",
              "      <td>11959</td>\n",
              "      <td>11462</td>\n",
              "      <td>0</td>\n",
              "      <td>1092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99001</th>\n",
              "      <td>1468023</td>\n",
              "      <td>23</td>\n",
              "      <td>11</td>\n",
              "      <td>1990</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>416.0</td>\n",
              "      <td>2560</td>\n",
              "      <td>185</td>\n",
              "      <td>4506</td>\n",
              "      <td>6516</td>\n",
              "      <td>4506</td>\n",
              "      <td>5760</td>\n",
              "      <td>0</td>\n",
              "      <td>756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99002</th>\n",
              "      <td>1397896</td>\n",
              "      <td>39</td>\n",
              "      <td>15</td>\n",
              "      <td>1974</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>397.0</td>\n",
              "      <td>2049</td>\n",
              "      <td>768</td>\n",
              "      <td>9410</td>\n",
              "      <td>12443</td>\n",
              "      <td>9410</td>\n",
              "      <td>9530</td>\n",
              "      <td>0</td>\n",
              "      <td>2913</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-998dd503-21a2-453c-99c6-9bd0c1040547')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-998dd503-21a2-453c-99c6-9bd0c1040547 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-998dd503-21a2-453c-99c6-9bd0c1040547');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 364
        },
        "id": "oZi5FPfJOdG-",
        "outputId": "bed69e29-bf5d-41c8-fedc-ae7b149a3932"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             userid           age       dob_day      dob_year     dob_month  \\\n",
              "count  9.900300e+04  99003.000000  99003.000000  99003.000000  99003.000000   \n",
              "mean   1.597045e+06     37.280224     14.530408   1975.719776      6.283365   \n",
              "std    3.440592e+05     22.589748      9.015606     22.589748      3.529672   \n",
              "min    1.000008e+06     13.000000      1.000000   1900.000000      1.000000   \n",
              "25%    1.298806e+06     20.000000      7.000000   1963.000000      3.000000   \n",
              "50%    1.596148e+06     28.000000     14.000000   1985.000000      6.000000   \n",
              "75%    1.895744e+06     50.000000     22.000000   1993.000000      9.000000   \n",
              "max    2.193542e+06    113.000000     31.000000   2000.000000     12.000000   \n",
              "\n",
              "             tenure  friend_count  friendships_initiated         likes  \\\n",
              "count  99001.000000  99003.000000           99003.000000  99003.000000   \n",
              "mean     537.887375    196.350787             107.452471    156.078785   \n",
              "std      457.649874    387.304229             188.786951    572.280681   \n",
              "min        0.000000      0.000000               0.000000      0.000000   \n",
              "25%      226.000000     31.000000              17.000000      1.000000   \n",
              "50%      412.000000     82.000000              46.000000     11.000000   \n",
              "75%      675.000000    206.000000             117.000000     81.000000   \n",
              "max     3139.000000   4923.000000            4144.000000  25111.000000   \n",
              "\n",
              "       likes_received  mobile_likes  mobile_likes_received     www_likes  \\\n",
              "count    99003.000000  99003.000000           99003.000000  99003.000000   \n",
              "mean       142.689363    106.116300              84.120491     49.962425   \n",
              "std       1387.919613    445.252985             839.889444    285.560152   \n",
              "min          0.000000      0.000000               0.000000      0.000000   \n",
              "25%          1.000000      0.000000               0.000000      0.000000   \n",
              "50%          8.000000      4.000000               4.000000      0.000000   \n",
              "75%         59.000000     46.000000              33.000000      7.000000   \n",
              "max     261197.000000  25111.000000          138561.000000  14865.000000   \n",
              "\n",
              "       www_likes_received  \n",
              "count        99003.000000  \n",
              "mean            58.568831  \n",
              "std            601.416348  \n",
              "min              0.000000  \n",
              "25%              0.000000  \n",
              "50%              2.000000  \n",
              "75%             20.000000  \n",
              "max         129953.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-918da0cc-c7e5-4138-9e60-77fe58a8cbf0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>9.900300e+04</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99001.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "      <td>99003.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.597045e+06</td>\n",
              "      <td>37.280224</td>\n",
              "      <td>14.530408</td>\n",
              "      <td>1975.719776</td>\n",
              "      <td>6.283365</td>\n",
              "      <td>537.887375</td>\n",
              "      <td>196.350787</td>\n",
              "      <td>107.452471</td>\n",
              "      <td>156.078785</td>\n",
              "      <td>142.689363</td>\n",
              "      <td>106.116300</td>\n",
              "      <td>84.120491</td>\n",
              "      <td>49.962425</td>\n",
              "      <td>58.568831</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.440592e+05</td>\n",
              "      <td>22.589748</td>\n",
              "      <td>9.015606</td>\n",
              "      <td>22.589748</td>\n",
              "      <td>3.529672</td>\n",
              "      <td>457.649874</td>\n",
              "      <td>387.304229</td>\n",
              "      <td>188.786951</td>\n",
              "      <td>572.280681</td>\n",
              "      <td>1387.919613</td>\n",
              "      <td>445.252985</td>\n",
              "      <td>839.889444</td>\n",
              "      <td>285.560152</td>\n",
              "      <td>601.416348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000008e+06</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1900.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.298806e+06</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>1963.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>226.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>17.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.596148e+06</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>1985.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>412.000000</td>\n",
              "      <td>82.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.895744e+06</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>1993.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>675.000000</td>\n",
              "      <td>206.000000</td>\n",
              "      <td>117.000000</td>\n",
              "      <td>81.000000</td>\n",
              "      <td>59.000000</td>\n",
              "      <td>46.000000</td>\n",
              "      <td>33.000000</td>\n",
              "      <td>7.000000</td>\n",
              "      <td>20.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.193542e+06</td>\n",
              "      <td>113.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>2000.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>3139.000000</td>\n",
              "      <td>4923.000000</td>\n",
              "      <td>4144.000000</td>\n",
              "      <td>25111.000000</td>\n",
              "      <td>261197.000000</td>\n",
              "      <td>25111.000000</td>\n",
              "      <td>138561.000000</td>\n",
              "      <td>14865.000000</td>\n",
              "      <td>129953.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-918da0cc-c7e5-4138-9e60-77fe58a8cbf0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-918da0cc-c7e5-4138-9e60-77fe58a8cbf0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-918da0cc-c7e5-4138-9e60-77fe58a8cbf0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lSTok5YFOywe",
        "outputId": "eb451a55-ec1b-4145-ac81-770f00b171ab"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 99003 entries, 0 to 99002\n",
            "Data columns (total 15 columns):\n",
            " #   Column                 Non-Null Count  Dtype  \n",
            "---  ------                 --------------  -----  \n",
            " 0   userid                 99003 non-null  int64  \n",
            " 1   age                    99003 non-null  int64  \n",
            " 2   dob_day                99003 non-null  int64  \n",
            " 3   dob_year               99003 non-null  int64  \n",
            " 4   dob_month              99003 non-null  int64  \n",
            " 5   gender                 98828 non-null  object \n",
            " 6   tenure                 99001 non-null  float64\n",
            " 7   friend_count           99003 non-null  int64  \n",
            " 8   friendships_initiated  99003 non-null  int64  \n",
            " 9   likes                  99003 non-null  int64  \n",
            " 10  likes_received         99003 non-null  int64  \n",
            " 11  mobile_likes           99003 non-null  int64  \n",
            " 12  mobile_likes_received  99003 non-null  int64  \n",
            " 13  www_likes              99003 non-null  int64  \n",
            " 14  www_likes_received     99003 non-null  int64  \n",
            "dtypes: float64(1), int64(13), object(1)\n",
            "memory usage: 11.3+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "NJXOcG6YO7Fg",
        "outputId": "3d42726a-6c40-429e-d5eb-636c866d7405"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       userid    age  dob_day  dob_year  dob_month  gender  tenure  \\\n",
              "0       False  False    False     False      False   False   False   \n",
              "1       False  False    False     False      False   False   False   \n",
              "2       False  False    False     False      False   False   False   \n",
              "3       False  False    False     False      False   False   False   \n",
              "4       False  False    False     False      False   False   False   \n",
              "...       ...    ...      ...       ...        ...     ...     ...   \n",
              "98998   False  False    False     False      False   False   False   \n",
              "98999   False  False    False     False      False   False   False   \n",
              "99000   False  False    False     False      False   False   False   \n",
              "99001   False  False    False     False      False   False   False   \n",
              "99002   False  False    False     False      False   False   False   \n",
              "\n",
              "       friend_count  friendships_initiated  likes  likes_received  \\\n",
              "0             False                  False  False           False   \n",
              "1             False                  False  False           False   \n",
              "2             False                  False  False           False   \n",
              "3             False                  False  False           False   \n",
              "4             False                  False  False           False   \n",
              "...             ...                    ...    ...             ...   \n",
              "98998         False                  False  False           False   \n",
              "98999         False                  False  False           False   \n",
              "99000         False                  False  False           False   \n",
              "99001         False                  False  False           False   \n",
              "99002         False                  False  False           False   \n",
              "\n",
              "       mobile_likes  mobile_likes_received  www_likes  www_likes_received  \n",
              "0             False                  False      False               False  \n",
              "1             False                  False      False               False  \n",
              "2             False                  False      False               False  \n",
              "3             False                  False      False               False  \n",
              "4             False                  False      False               False  \n",
              "...             ...                    ...        ...                 ...  \n",
              "98998         False                  False      False               False  \n",
              "98999         False                  False      False               False  \n",
              "99000         False                  False      False               False  \n",
              "99001         False                  False      False               False  \n",
              "99002         False                  False      False               False  \n",
              "\n",
              "[99003 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3951dcd2-b22d-40df-a6b8-e9dd80009947\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98998</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98999</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99000</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99001</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99002</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>99003 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3951dcd2-b22d-40df-a6b8-e9dd80009947')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3951dcd2-b22d-40df-a6b8-e9dd80009947 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3951dcd2-b22d-40df-a6b8-e9dd80009947');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.drop_duplicates()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 486
        },
        "id": "jm4GHkwYQMoO",
        "outputId": "6e9fa788-152a-4111-e155-2e5630e3f66a"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        userid  age  dob_day  dob_year  dob_month  gender  tenure  \\\n",
              "0      2094382   14       19      1999         11    male   266.0   \n",
              "1      1192601   14        2      1999         11  female     6.0   \n",
              "2      2083884   14       16      1999         11    male    13.0   \n",
              "3      1203168   14       25      1999         12  female    93.0   \n",
              "4      1733186   14        4      1999         12    male    82.0   \n",
              "...        ...  ...      ...       ...        ...     ...     ...   \n",
              "98998  1268299   68        4      1945          4  female   541.0   \n",
              "98999  1256153   18       12      1995          3  female    21.0   \n",
              "99000  1195943   15       10      1998          5  female   111.0   \n",
              "99001  1468023   23       11      1990          4  female   416.0   \n",
              "99002  1397896   39       15      1974          5  female   397.0   \n",
              "\n",
              "       friend_count  friendships_initiated  likes  likes_received  \\\n",
              "0                 0                      0      0               0   \n",
              "1                 0                      0      0               0   \n",
              "2                 0                      0      0               0   \n",
              "3                 0                      0      0               0   \n",
              "4                 0                      0      0               0   \n",
              "...             ...                    ...    ...             ...   \n",
              "98998          2118                    341   3996           18089   \n",
              "98999          1968                   1720   4401           13412   \n",
              "99000          2002                   1524  11959           12554   \n",
              "99001          2560                    185   4506            6516   \n",
              "99002          2049                    768   9410           12443   \n",
              "\n",
              "       mobile_likes  mobile_likes_received  www_likes  www_likes_received  \n",
              "0                 0                      0          0                   0  \n",
              "1                 0                      0          0                   0  \n",
              "2                 0                      0          0                   0  \n",
              "3                 0                      0          0                   0  \n",
              "4                 0                      0          0                   0  \n",
              "...             ...                    ...        ...                 ...  \n",
              "98998          3505                  11887        491                6202  \n",
              "98999          4399                  10592          2                2820  \n",
              "99000         11959                  11462          0                1092  \n",
              "99001          4506                   5760          0                 756  \n",
              "99002          9410                   9530          0                2913  \n",
              "\n",
              "[99003 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-09f90965-a67f-44c4-9990-3a3174916990\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2094382</td>\n",
              "      <td>14</td>\n",
              "      <td>19</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>266.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1192601</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2083884</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1203168</td>\n",
              "      <td>14</td>\n",
              "      <td>25</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>female</td>\n",
              "      <td>93.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1733186</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>male</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98998</th>\n",
              "      <td>1268299</td>\n",
              "      <td>68</td>\n",
              "      <td>4</td>\n",
              "      <td>1945</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>541.0</td>\n",
              "      <td>2118</td>\n",
              "      <td>341</td>\n",
              "      <td>3996</td>\n",
              "      <td>18089</td>\n",
              "      <td>3505</td>\n",
              "      <td>11887</td>\n",
              "      <td>491</td>\n",
              "      <td>6202</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98999</th>\n",
              "      <td>1256153</td>\n",
              "      <td>18</td>\n",
              "      <td>12</td>\n",
              "      <td>1995</td>\n",
              "      <td>3</td>\n",
              "      <td>female</td>\n",
              "      <td>21.0</td>\n",
              "      <td>1968</td>\n",
              "      <td>1720</td>\n",
              "      <td>4401</td>\n",
              "      <td>13412</td>\n",
              "      <td>4399</td>\n",
              "      <td>10592</td>\n",
              "      <td>2</td>\n",
              "      <td>2820</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99000</th>\n",
              "      <td>1195943</td>\n",
              "      <td>15</td>\n",
              "      <td>10</td>\n",
              "      <td>1998</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>111.0</td>\n",
              "      <td>2002</td>\n",
              "      <td>1524</td>\n",
              "      <td>11959</td>\n",
              "      <td>12554</td>\n",
              "      <td>11959</td>\n",
              "      <td>11462</td>\n",
              "      <td>0</td>\n",
              "      <td>1092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99001</th>\n",
              "      <td>1468023</td>\n",
              "      <td>23</td>\n",
              "      <td>11</td>\n",
              "      <td>1990</td>\n",
              "      <td>4</td>\n",
              "      <td>female</td>\n",
              "      <td>416.0</td>\n",
              "      <td>2560</td>\n",
              "      <td>185</td>\n",
              "      <td>4506</td>\n",
              "      <td>6516</td>\n",
              "      <td>4506</td>\n",
              "      <td>5760</td>\n",
              "      <td>0</td>\n",
              "      <td>756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99002</th>\n",
              "      <td>1397896</td>\n",
              "      <td>39</td>\n",
              "      <td>15</td>\n",
              "      <td>1974</td>\n",
              "      <td>5</td>\n",
              "      <td>female</td>\n",
              "      <td>397.0</td>\n",
              "      <td>2049</td>\n",
              "      <td>768</td>\n",
              "      <td>9410</td>\n",
              "      <td>12443</td>\n",
              "      <td>9410</td>\n",
              "      <td>9530</td>\n",
              "      <td>0</td>\n",
              "      <td>2913</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>99003 rows × 15 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-09f90965-a67f-44c4-9990-3a3174916990')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-09f90965-a67f-44c4-9990-3a3174916990 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-09f90965-a67f-44c4-9990-3a3174916990');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['dob_year']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jE-dacIkQ28X",
        "outputId": "553a8032-9d7d-45a1-a747-94271cde7fb5"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        1999\n",
              "1        1999\n",
              "2        1999\n",
              "3        1999\n",
              "4        1999\n",
              "         ... \n",
              "98998    1945\n",
              "98999    1995\n",
              "99000    1998\n",
              "99001    1990\n",
              "99002    1974\n",
              "Name: dob_year, Length: 99003, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# New section"
      ],
      "metadata": {
        "id": "jpmr0anyLnfa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "l = [];\n",
        "for i in range(0,99003):\n",
        "  l.append(i)\n",
        "yp = data['age']\n",
        "plt.bar(l,yp)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "ZvtstmLtTbyq",
        "outputId": "3bbc44ed-51c3-4bc3-b30a-79b4676576b5"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "group = data.groupby('age').count()\n",
        "group.plot.bar()\n",
        "plt.ylabel(\"NUMBER OF PERSONS\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 298
        },
        "id": "1bO5Fd_aV_7C",
        "outputId": "a50d6435-e928-4abd-f8d2-3bd5cddf7291"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.scatter(data['friend_count'],data['likes_received'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "mudd1wYvYv9u",
        "outputId": "726e5d8b-93d6-4fae-f6fa-2ab43787fb86"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s.countplot(data['gender'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "ifnlh5WXZfHD",
        "outputId": "dcd27964-820f-4597-ddfb-e8faff0c3901"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.9/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='gender', ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s.countplot(data['age'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 354
        },
        "id": "aMVsC3mIaNCk",
        "outputId": "5bbc4b67-cac8-4f5a-f215-d64a88ee9457"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.9/dist-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<AxesSubplot:xlabel='age', ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.boxplot(data['dob_year'])\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "444sz_DRaayW",
        "outputId": "350da8e9-4d2a-4149-db73-860082d26938"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAX0AAAD4CAYAAAAAczaOAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAOwElEQVR4nO3dcaid9X3H8fdH03aumjXitXRJXBxLhBQnaw9W2MZKh2mcjDjUoR1TpjQdUdiguqUi025QtiEdlLlKcNF2G0pxlSptJ6EMAiXdPNd11VvT9tZiveqW6xLmunVN7b774z7Bw+01956Tm3tu8nu/4HCe8/09z3O+D9x87nN/53lOUlVIktpwxrgbkCStHENfkhpi6EtSQwx9SWqIoS9JDVkz7gYWc95559WmTZvG3YYknTImJydfqaqJhcZWfehv2rSJfr8/7jYk6ZSR5Pk3GnN6R5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYuGfpKNSf4xydeTTCX5va5+bpJ9Sb7VPa/r6knyiSTTSb6W5F0D+7qxW/9bSW48eYclSVrIUs70XwM+XFVbgcuAW5JsBXYDX6qqzcCXutcAVwCbu8dO4JMw90sCuAt4D3ApcNexXxSSpJWxaOhX1ctV9VS3/F/As8B6YAfwqW61TwFXdcs7gE/XnK8Ab0vyDuD9wL6qOlxVR4B9wPblPBhJ0vENdXNWkk3ALwD/BLy9ql7uhv4NeHu3vB54YWCzma72RvWF3mcnc38lcMEFFwzTojSSJCv2Xv4fFhqnJX+Qm+Rs4O+B36+qVwfHau6neNl+kqtqT1X1qqo3MbHgncTSsqqqoR8nsp00LksK/SRvYi7w/66qPtuV/72btqF7PtTVXwQ2Dmy+oau9UV2StEKWcvVOgL8Gnq2qjw8MPQYcuwLnRuBzA/Ubuqt4LgP+s5sGegLYlmRd9wHutq4mSVohS5nT/0Xgt4Gnk3y1q90B/CnwmSQ3A88Dv9mNfQH4NWAa+B/gdwCq6nCSPwGe7Nb746o6vBwHIUlamqz2OcZer1d+y6ZWoyTO0WtVSjJZVb2FxrwjV5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXE0Jekhhj6ktSQob5lUzpVnHvuuRw5cuSkv8/J/nbOdevWcfiwN65r+Rj6Oi0dOXLktLhbdiW/8lltcHpHkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXEr1bWaanuWgt3/9S42zhhddfacbeg04yhr9NSPvrqafN9+nX3uLvQ6cTpHUlqiKEvSQ0x9CWpIYa+JDXE0Jekhiwa+kn2JjmU5JmB2iVJDiR5OsnjSdZ29Tcl+VRXfzbJRwa22Z7kG0mmk+w+OYcjSTqepZzpPwhsn1e7H9hdVRcDjwK3d/Vrgbd09XcDH0qyKcmZwL3AFcBW4PokW5ehf0nSEBYN/araDxyeV94C7O+W9wFXH1sdeGuSNcBZwFHgVeBSYLqqnquqo8DDwI4Tb1+SNIxR5/SneD20rwU2dsuPAP8NvAx8F7inqg4D64EXBraf6WoLSrIzST9Jf3Z2dsQWJUnzjRr6NwG7kkwC5zB3Rg9zZ/Q/An4auBD4cJKfHXbnVbWnqnpV1ZuYmBixRUnSfCN9DUNVHQS2ASTZAlzZDX0A+Ieq+iFwKMmXgR5zZ/kbB3axAXhx1KYlSaMZ6Uw/yfnd8xnAncB93dB3gfd1Y28FLgMOAk8Cm5NcmOTNwHXAYyfWuiRpWEu5ZPMh4ABwUZKZJDczd/XNN5kL9JeAB7rV7wXOTjLFXNA/UFVfq6rXgFuBJ4Bngc9U1dTyH44k6Xiy2r+JsNfrVb/fH3cbOsUkOX2+ZfM0OA6trCSTVdVbaMw7ciWpIYa+JDXE0Jekhhj6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXE0JekhqwZdwPSyZJk3C2csHXr1o27BZ1mDH2dlqrqpL9HkhV5H2k5Ob0jSQ1ZNPST7E1yKMkzA7VLkhxI8nSSx5OsHRj7+W5sqhv/ia7+7u71dJJP5HT421uSTjFLOdN/ENg+r3Y/sLuqLgYeBW4HSLIG+Fvgd6vqncB7gR9223wS+CCwuXvM36ck6SRbNPSraj9weF55C7C/W94HXN0tbwO+VlX/2m37H1X1oyTvANZW1VdqbhL008BVy9C/JGkIo87pTwE7uuVrgY3d8hagkjyR5Kkkf9DV1wMzA9vPdLUFJdmZpJ+kPzs7O2KLkqT5Rg39m4BdSSaBc4CjXX0N8EvAb3XPv5HkV4fdeVXtqapeVfUmJiZGbFGSNN9Il2xW1UHmpnJIsgW4shuaAfZX1Svd2BeAdzE3z79hYBcbgBdH7FmSNKKRzvSTnN89nwHcCdzXDT0BXJzkJ7sPdX8F+HpVvQy8muSy7qqdG4DPnXD3kqShLOWSzYeAA8BFSWaS3Axcn+SbwEHgJeABgKo6AnwceBL4KvBUVX2+29Uu5q76mQa+DXxxeQ9FkrSYrPY7Cnu9XvX7/XG3If0Y78jVapVksqp6C415R64kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXE0Jekhhj6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ1ZNPST7E1yKMkzA7VLkhxI8nSSx5OsnbfNBUm+l+S2gdr2JN9IMp1k9/IehiRpKZZypv8gsH1e7X5gd1VdDDwK3D5v/OPAF4+9SHImcC9wBbAVuD7J1hF7liSNaNHQr6r9wOF55S3A/m55H3D1sYEkVwHfAaYG1r8UmK6q56rqKPAwsGP0tiVJoxh1Tn+K10P7WmAjQJKzgT8EPjpv/fXACwOvZ7ragpLsTNJP0p+dnR2xRUnSfKOG/k3AriSTwDnA0a5+N/AXVfW9E2mqqvZUVa+qehMTEyeyK0nSgDWjbFRVB4FtAEm2AFd2Q+8Brkny58DbgP9L8r/AJN1fA50NwIsj9ixJGtFIoZ/k/Ko6lOQM4E7gPoCq+uWBde4GvldVf5lkDbA5yYXMhf11wAdOtHlJ0nAWDf0kDwHvBc5LMgPcBZyd5JZulc8CDxxvH1X1WpJbgSeAM4G9VTV1vG0kScsvVTXuHo6r1+tVv98fdxvSj0nCav/3ozYlmayq3kJj3pErSQ0x9CWpIYa+JDXE0Jekhhj6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUEENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXE0Jekhhj6ktQQQ1+SGrJo6CfZm+RQkmcGapckOZDk6SSPJ1nb1S9PMtnVJ5O8b2Cbd3f16SSfSJKTc0iSpDeylDP9B4Ht82r3A7ur6mLgUeD2rv4K8Otd/Ubgbwa2+STwQWBz95i/T0nSSbZo6FfVfuDwvPIWYH+3vA+4ulv3X6rqpa4+BZyV5C1J3gGsraqvVFUBnwauWob+JUlDGHVOfwrY0S1fC2xcYJ2rgaeq6gfAemBmYGymqy0oyc4k/ST92dnZEVuUJM03aujfBOxKMgmcAxwdHEzyTuDPgA+NsvOq2lNVvarqTUxMjNiiJGm+NaNsVFUHgW0ASbYAVx4bS7KBuXn+G6rq2135RWDDwC42dDVJ0goa6Uw/yfnd8xnAncB93eu3AZ9n7kPeLx9bv6peBl5Ncll31c4NwOdOrHVpPJJw7OKzwWXpVLCUSzYfAg4AFyWZSXIzcH2SbwIHgZeAB7rVbwV+DvijJF/tHud3Y7uYu+pnGvg28MXlPRRpdMfCeymPk7G9tFIydzHN6tXr9arf74+7DQnguKG92v8tqR1JJquqt9CYd+RKI7r88svH3YI0NENfGtG+ffvG3YI0NENfkhpi6EtSQwx9SWqIoS9JDTH0Jakhhr4kNcTQl6SGGPqS1BBDX5IaYuhLUkMMfUlqiKEvSQ0x9CWpIYa+JDXE0Jekhhj6ktQQQ1+SGmLoS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXRnTWWWeNuwVpaIa+NKLvf//7425BGpqhL0kNMfQlqSGGvjSie+65Z9wtSEMz9KUR3XbbbeNuQRqaoS+N6I477hh3C9LQFg39JHuTHEryzEDtkiQHkjyd5PEkawfGPpJkOsk3krx/oL69q00n2b38hyKtrI997GPjbkEa2lLO9B8Ets+r3Q/srqqLgUeB2wGSbAWuA97ZbfNXSc5MciZwL3AFsBW4vltXkrSCFg39qtoPHJ5X3gLs75b3AVd3yzuAh6vqB1X1HWAauLR7TFfVc1V1FHi4W1eStIJGndOf4vXQvhbY2C2vB14YWG+mq71RfUFJdibpJ+nPzs6O2KJ0cj3yyCPjbkEa2qihfxOwK8kkcA5wdPlagqraU1W9qupNTEws566lZXPNNdeMuwVpaGtG2aiqDgLbAJJsAa7shl7k9bN+gA1djePUJUkrZKQz/STnd89nAHcC93VDjwHXJXlLkguBzcA/A08Cm5NcmOTNzH3Y+9iJNi+ttKoaqi6tNoue6Sd5CHgvcF6SGeAu4Owkt3SrfBZ4AKCqppJ8Bvg68BpwS1X9qNvPrcATwJnA3qqaWuZjkVaEAa9TWVb7D3Cv16t+vz/uNiTplJFksqp6C415R64kNcTQl6SGGPqS1BBDX5Iasuo/yE0yCzw/7j6kBZwHvDLuJqQF/ExVLXhn66oPfWm1StJ/oyskpNXK6R1JaoihL0kNMfSl0e0ZdwPSsJzTl6SGeKYvSQ0x9CWpIYa+NKQke5McSvLMuHuRhmXoS8N7ENg+7iakURj60pCqaj9weNx9SKMw9CWpIYa+JDXE0Jekhhj6ktQQQ18aUpKHgAPARUlmktw87p6kpfJrGCSpIZ7pS1JDDH1JaoihL0kNMfQlqSGGviQ1xNCXpIYY+pLUkP8HZui6TaaBqpAAAAAASUVORK5CYII=\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.loc[0,'age'] = 20\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "OXMl9uCZb1is",
        "outputId": "d3c0ddeb-be31-46a9-a33a-46fadade9697"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    userid  age  dob_day  dob_year  dob_month  gender  tenure  friend_count  \\\n",
              "0  2094382   20       19      1999         11    male   266.0             0   \n",
              "1  1192601   14        2      1999         11  female     6.0             0   \n",
              "2  2083884   14       16      1999         11    male    13.0             0   \n",
              "3  1203168   14       25      1999         12  female    93.0             0   \n",
              "4  1733186   14        4      1999         12    male    82.0             0   \n",
              "\n",
              "   friendships_initiated  likes  likes_received  mobile_likes  \\\n",
              "0                      0      0               0             0   \n",
              "1                      0      0               0             0   \n",
              "2                      0      0               0             0   \n",
              "3                      0      0               0             0   \n",
              "4                      0      0               0             0   \n",
              "\n",
              "   mobile_likes_received  www_likes  www_likes_received  \n",
              "0                      0          0                   0  \n",
              "1                      0          0                   0  \n",
              "2                      0          0                   0  \n",
              "3                      0          0                   0  \n",
              "4                      0          0                   0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9f552432-de17-4c46-aa58-5af5aac620d6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>userid</th>\n",
              "      <th>age</th>\n",
              "      <th>dob_day</th>\n",
              "      <th>dob_year</th>\n",
              "      <th>dob_month</th>\n",
              "      <th>gender</th>\n",
              "      <th>tenure</th>\n",
              "      <th>friend_count</th>\n",
              "      <th>friendships_initiated</th>\n",
              "      <th>likes</th>\n",
              "      <th>likes_received</th>\n",
              "      <th>mobile_likes</th>\n",
              "      <th>mobile_likes_received</th>\n",
              "      <th>www_likes</th>\n",
              "      <th>www_likes_received</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2094382</td>\n",
              "      <td>20</td>\n",
              "      <td>19</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>266.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1192601</td>\n",
              "      <td>14</td>\n",
              "      <td>2</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>female</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2083884</td>\n",
              "      <td>14</td>\n",
              "      <td>16</td>\n",
              "      <td>1999</td>\n",
              "      <td>11</td>\n",
              "      <td>male</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1203168</td>\n",
              "      <td>14</td>\n",
              "      <td>25</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>female</td>\n",
              "      <td>93.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1733186</td>\n",
              "      <td>14</td>\n",
              "      <td>4</td>\n",
              "      <td>1999</td>\n",
              "      <td>12</td>\n",
              "      <td>male</td>\n",
              "      <td>82.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f552432-de17-4c46-aa58-5af5aac620d6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9f552432-de17-4c46-aa58-5af5aac620d6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9f552432-de17-4c46-aa58-5af5aac620d6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pd.isnull(data['gender']).sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LN8xilmIcTDb",
        "outputId": "70e26806-80ba-4043-c40f-ba37c9848f55"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "175"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['gender'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hhgosg5RcTLN",
        "outputId": "3773dc0f-1f4c-42da-ff55-492009aafef9"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "male      58574\n",
              "female    40254\n",
              "Name: gender, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data['gender'] = data['gender'].fillna('no gender')\n",
        "data['gender'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "thTGdBGFdLSk",
        "outputId": "cfd51bb1-96b3-464f-f89a-f9f453ce59b5"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "male         58574\n",
              "female       40254\n",
              "no gender      175\n",
              "Name: gender, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    }
  ]
}